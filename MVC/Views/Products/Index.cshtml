@model IEnumerable<MVC.Models.Product>

@{
    ViewBag.Title = "Index";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <link type="text/css" rel="stylesheet" href="~/Content/Products/View.css" />

    <meta charset="utf-8">

    <title>Login</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700" rel="stylesheet">
</head>

<body>
    @Html.ActionLink("create", "Create", "Products");

    <div class="container">
        <div class="heading">
            <h1>
                <span class="shopper"></span> Shopping Cart
            </h1>

            <a href="#" class="visibility-cart transition is-open">X</a>
        </div>

        <div class="cart transition is-open">

            <a href="#" class="btn btn-update">Update cart</a>


            <div class="table">

                <div class="layout-inline row th">
                    <div class="col col-pro">Product</div>
                    <div class="col col-price align-center ">
                        Price
                    </div>
                    <div class="col col-qty align-center">QTY</div>
                    <div class="col">VAT</div>
                    <div class="col">Total</div>
                </div>
                @{ 
                    var c = 0;
                }
                @foreach (var item in Model)
                {
                <div class="layout-inline row">

                    <div class="col col-pro layout-inline">
                        <img src="@Url.Action("GetProductImage", "Products", new { id = item.Pid })" />
                        <p>@item.PName</p>
                    </div>

                    <div class="col col-price col-numeric align-center ">
                        <p>$@item.Price</p>
                    </div>
                    @{

                        var count = "count" + c;
                        var plusbtn = "plus" + count;
                        var minusbtn = "minus" + count;
                        c++;
                        var total = "total" + count;
                        var price = "price" + count;

                     }
                    <div class="col col-qty layout-inline">
                        <a href="#" class="qty qty-minus" id="@minusbtn">-</a>
                        <input type="text" id="@count" value="0" />
                        <a href="#" class="qty qty-plus" id="@plusbtn">+</a>
                    </div>

                    <div class="col col-vat col-numeric">
                         
                            @{
                            var x=    ((MVC.Controllers.ProductsController)this.ViewContext.Controller).GetProductVendor(item.VendorId);
                            }
                       <p>@x</p>
                        
                    </div>
                    <input type="text" style="display:none" id="@price" value="@item.Price" />
                    <div class="col col-total col-numeric">
                        <p id="@total"> 0</p>
                    </div>
                </div>


                }

                <div class="tf">
                    <div class="row layout-inline">
                        <div class="col">
                            <p>Vendor</p>
                        </div>
                        <div class="col"></div>
                    </div>
                    <div class="row layout-inline">
                        <div class="col">
                            <p>Shipping</p>
                        </div>
                        <div class="col"></div>
                    </div>
                    <div class="row layout-inline">
                        <div class="col">
                            <p>Total</p>
                        </div>
                        <div class="col"></div>
                    </div>
                </div>
            </div>

            <a href="#" class="btn btn-update">Update cart</a>

        </div>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
        <script type="text/javascript">

            $('.visibility-cart').on('click', function () {

                var $btn = $(this);
                var $cart = $('.cart');
                console.log($btn);

                if ($btn.hasClass('is-open')) {
                    $btn.removeClass('is-open');
                    $btn.text('O')
                    $cart.removeClass('is-open');
                    $cart.addClass('is-closed');
                    $btn.addClass('is-closed');
                } else {
                    $btn.addClass('is-open');
                    $btn.text('X')
                    $cart.addClass('is-open');
                    $cart.removeClass('is-closed');
                    $btn.removeClass('is-closed');
                }


            });



            // SHOPPING CART PLUS OR MINUS
           

            $('a.qty-plus').on('click', function (e) {
                e.preventDefault();
                var $this = $(this);
                var $input = $this.closest('div').find('input');
                var value = parseInt($input.val());

                if (value < 100) {
                    value = value + 1;
                } else {
                    value = 100;
                }

                $input.val(value);
            });
            $('a.qty-minus').on('click', function (e) {
                e.preventDefault();
                var $this = $(this);
                var $input = $this.closest('div').find('input');
                var value = parseInt($input.val());

                if (value > 0) {
                    value = value - 1;
                } else {
                   
                }

                $input.val(value);
            });
            $('a.qty-minus').on('click', function (e) {
                var mid = $(this).attr('id').toString();
                var substr = mid.slice(5);
                var countval = parseInt($('#' + substr).val())

                var priceis = parseInt($('#' + "price" + substr).val()) * countval;

                $('#' + 'total' + substr).text('$' + priceis.toString());

            });
            $('a.qty-plus').on('click', function (e) {
                var mid = $(this).attr('id').toString();
                var substr = mid.slice(4);
                var countval = parseInt($('#' + substr).val())

                var priceis = parseInt($('#' + "price" + substr).val()) * countval;

                $('#' + 'total' + substr).text('$' + priceis.toString());

            });
            // RESTRICT INPUTS TO NUMBERS ONLY WITH A MIN OF 0 AND A MAX 100
            $('input').on('blur', function () {

                var input = $(this);
                var value = parseInt($(this).val());

                if (value < 0 || isNaN(value)) {
                    input.val(0);
                } else if
			(value > 100) {
                    input.val(100);
                }
            });

        </script>
</body>
</html>